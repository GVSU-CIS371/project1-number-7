body,
html {
  /* height:100%; */

  margin: 0px;
  padding: 0px;
}

/* I decided to layout a grid for 'app' which contains 'main' as an 'app-item'. 'main' can also be another grid that holds store item values.
Feel free to change whatever is currently here.*/

#app {
  display: grid;
  font-family: "Segoe UI";

  grid-template-rows: 1fr, 1fr, 1fr;
  grid-template-columns: 1fr;
  grid-template-areas:
  "header"
  "main"
  "footer"
  ;

  gap:5px;
  width: 100vw;
  height: 100vh;
}

.app-item{
  padding: 15px;
  border-style: solid;
  border-width: 1px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  gap: 20px;
}

.store-item {
  display: grid;
  background-color: tan;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows:  1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  gap: 5px;
  grid-template-areas:
  "image image image"
  "image image image"
  "image image image"
  "image image image"
  "image image image"
  "content1 content1 content1"
  "content2 content2 content2"
  "content2 content2 content2"
  "span1 span2 span3"
}

img {
  grid-area: image;
  height: 100%;
  width: 100%;
}

.store-item p:first-of-type {
  grid-area: content1;
}

.store-item p:last-of-type {
  grid-area: content2;
}

span:first-of-type {
  grid-area: span1;
}

span:nth-of-type(2) {
  grid-area: span2;
}

span:last-of-type {
  grid-area: span3;
}

header {
  display: flex;
  background-color: tan;
  grid-area: header;
  justify-content: space-between;
}

ul {
  display: flex;
  list-style-type: none;
}

li{
  margin: 10px;
}

main {
  background-color: tan;
  grid-area: main;
}



footer {
  background-color: tan;
  grid-area: footer;
  text-align: center;
}
